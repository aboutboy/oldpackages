--- a/src/res_comp.c
+++ b/src/res_comp.c
@@ -21,6 +21,7 @@
 #include <sys/types.h>
 #include <stdio.h>
 #include "nameser.h"
+#include "res_put.h"
 
 static      dn_find();
 
@@ -275,54 +276,3 @@ static int dn_find(u_char *exp_dn, u_cha
     return (-1);
 }
 
-/*
- * Routines to insert/extract short/long's. Must account for byte order
- * and non-alignment problems. This code at least has the advantage of
- * being portable.
- * 
- * used by sendmail.
- */
-
-u_short _getshort(u_char *msgp)
-{
-    u_char *p = (u_char *) msgp;
-
-#ifdef vax
-    /* vax compiler doesn't put shorts in registers */
-    u_long u;
-#else
-    u_short u;
-#endif
-
-    u = *p++ << 8;
-    return ((u_short) (u | *p));
-}
-
-u_long _getlong(u_char *msgp)
-{
-    u_char *p = (u_char *) msgp;
-    u_long u;
-
-    u = *p++;
-    u <<= 8;
-    u |= *p++;
-    u <<= 8;
-    u |= *p++;
-    u <<= 8;
-    return (u | *p);
-}
-
-int putshort(u_short s, u_char *msgp)
-{
-
-    msgp[1] = s;
-    msgp[0] = s >> 8;
-}
-
-int putlong(u_long l, u_char *msgp)
-{
-    msgp[3] = l;
-    msgp[2] = (l >>= 8);
-    msgp[1] = (l >>= 8);
-    msgp[0] = l >> 8;
-}
--- a/src/res_mkquery.c
+++ b/src/res_mkquery.c
@@ -25,6 +25,7 @@
 #include "sys.h"
 #include "nameser.h"
 #include "resolv.h"
+#include "res_put.h"
 
 /* Form all types of queries. Returns the size of the result or -1. */
 int res_mkquery(int op, char *dname, int class, int type, char *data,
--- /dev/null
+++ b/src/res_put.c
@@ -0,0 +1,47 @@
+#include <sys/types.h>
+#include <stdio.h>
+
+u_short _getshort(u_char *msgp)
+{
+    u_char *p = (u_char *) msgp;
+
+#ifdef vax
+    /* vax compiler doesn't put shorts in registers */
+    u_long u;
+#else
+    u_short u;
+#endif
+
+    u = *p++ << 8;
+    return ((u_short) (u | *p));
+}
+
+u_long _getlong(u_char *msgp)
+{
+    u_char *p = (u_char *) msgp;
+    u_long u;
+
+    u = *p++;
+    u <<= 8;
+    u |= *p++;
+    u <<= 8;
+    u |= *p++;
+    u <<= 8;
+    return (u | *p);
+}
+
+int putshort(u_short s, u_char *msgp)
+{
+
+    msgp[1] = s;
+    msgp[0] = s >> 8;
+}
+
+int putlong(u_long l, u_char *msgp)
+{
+    msgp[3] = l;
+    msgp[2] = (l >>= 8);
+    msgp[1] = (l >>= 8);
+    msgp[0] = l >> 8;
+}
+
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -14,7 +14,7 @@ LDFLAGS=@LDFLAGS@
 #RES_SRC =
 
 #This is only for very old systems that NEED this
-RES_SRC = res_mkquery.c res_init.c res_comp.c
+RES_SRC = res_put.c res_mkquery.c res_init.c res_comp.c
 
 SOURCES = blalloc.c bsd.c channel.c clientlist.c clones.c confparse.c \
           fdlist.c fds.c hash.c hide.c inet_addr.c ircd.c \
--- /dev/null
+++ b/include/res_put.h
@@ -0,0 +1,20 @@
+#ifndef _RES_PUT_H_
+#define _RES_PUT_H_
+
+/*
+ * Routines to insert/extract short/long's. Must account for byte order
+ * and non-alignment problems. This code at least has the advantage of
+ * being portable.
+ * 
+ * used by sendmail.
+ */
+#include <sys/types.h>
+#include <stdio.h>
+
+u_short _getshort(u_char *msgp);
+u_long _getlong(u_char *msgp);
+int putshort(u_short s, u_char *msgp);
+int putlong(u_long l, u_char *msgp);
+
+
+#endif /* _RES_PUT_H_ */
